{"version":3,"sources":["../../src/routes/fetchAllLeague.js"],"names":["router","Router","use","oddHeader","JSON_ODD_KEY","sortOddTypes","sortSports","get","authenticate","session","req","res","headers","result","json","jsonOdds","jsonSportArray","map","event","eventIdx","sport","sportIdx","available","Details","Number","Sport","jsonOddIndex","addDetail","leagueDetail","every","detail","detailIdx","Object","keys","oddArr","Odds","oddtype","oddTypeIdx","addOdd","odd","oddIdx","OddType","push","sort","a","b","indexOf"],"mappings":"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","file":"fetchAllLeague.js","sourcesContent":["import express from 'express';\nconst router = express.Router();\nimport fetch from 'node-fetch';\n\n\n\nimport JwtStrategy from '../middleware/JwtStrategy';\nimport passport from \"passport\";\npassport.use(JwtStrategy);\n\nimport config from '../data/config';\nconst oddHeader = { \"JsonOdds-API-Key\": config.JSON_ODD_KEY };\n\nimport jsonSportArr from '../data/jsonSportArray';\n\nconst sortOddTypes = [\"Game\", \"First Half\", \"Second Half\", \"First Quarter\", \"Second Quarter\", \"Third Quarter\", \"Fourth Quarter\", \"First Period\", \"Second Period\", \"Third Period\", \"First Five Innings\", \"First Inning\"]\nconst sortSports = ['NBA', 'MLB', 'NCAAB', 'NCAAF', 'NFL', 'NHL', 'WNBA', 'SOCCER', 'TENNIS', 'BOXING', 'MMA', 'CRICKET', 'HORSE-RACING', 'KHL', 'AHL', 'SHL', 'HALL', 'LMP', 'NPB', 'KBO', 'GOLF', 'RUGBY', 'WBC']\n\nrouter.get('/fetch-all-leagues', passport.authenticate('jwt', {session: false}), async function(req, res){\n\n\tconst result = await fetch('https://jsonodds.com/api/odds?source=3', {headers: oddHeader})\n\tconst jsonOdds = await result.json()\n\t\n\tconst jsonSportArray = jsonSportArr;\n\n\tjsonOdds.map(function(event, eventIdx){\n\t\tjsonSportArray.map(function(sport, sportIdx){\n\t\t\tif(sport.available){\n\t\t\t\tif(event.Details){\n\t\t\t\t\tif(Number(event.Sport) === Number(sport.jsonOddIndex)){\n\t\t\t\t\t\tlet addDetail = sport.leagueDetail.every(function(detail, detailIdx){\n\t\t\t\t\t\t\treturn Object.keys(detail)[0] !== event.Details\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif(addDetail){\n\t\t\t\t\t\t\tlet oddArr = []\n\t\t\t\t\t\t\tevent.Odds.map(function(oddtype, oddTypeIdx){\n\t\t\t\t\t\t\t\tlet addOdd = oddArr.every(function(odd, oddIdx){\n\t\t\t\t\t\t\t\t\treturn odd !== oddtype.OddType\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tif(addOdd){\n\t\t\t\t\t\t\t\t\toddArr.push(oddtype.OddType)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\toddArr.sort(function(a, b){\n\t\t\t\t\t\t\t\treturn sortOddTypes.indexOf(a) - sortOddTypes.indexOf(b)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tsport.leagueDetail.push({[event.Details]: oddArr})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t})\n\n\tjsonSportArray.sort((a, b) => sortSports.indexOf(a.sport) - sortSports.indexOf(b.sport))\n\n\tres.json(jsonSportArray)\n\n})\n\nexport default router\n\n\n"]}